/* * Display Types Façade Pattern * * Ken Frederick * ken.frederick@gmx.de * * http://kennethfrederick.de/ * http://blog.kennethfrederick.de/ * */// -----------------------------------------------------------------------------//// Properties//// -----------------------------------------------------------------------------var document = app.activeDocument;var layer = document.layers[0];var selected = document.selection;var scalar = 0.5;var interval = 36*scalar;var angles = {    y: 108,    m: 162,    c: 90,    k: 45};var degree = 45;// -----------------------------------------------------------------------------//// Methods//// -----------------------------------------------------------------------------////  Setup//(function setup() {})();////  Draw//(function draw() {    var w = document.width;    var h = document.height;    var rad = radians(degree % 90);    var sinr = Math.sin(rad),        cosr = Math.cos(rad);    var ow = w * cosr + h * sinr,        oh = h * cosr + w * sinr;    var group = document.groupItems.add();    group.name = "dots";    for (var y=0; y<oh; y+=interval) {        for (var x=0; x<ow; x+=interval) {            var radius = setRadius(x, y, interval) || 0;            if (radius !== 0) {                var path = group.pathItems.ellipse(                    y, x,                    radius, radius,                    false,                    true                );                path.filled = true;                path.fillColor = document.swatches[3].color;                path.stroked = false;            }        }    }    group.rotate(degree);    // todo cleanup?    // reset    // display.rotate(-rad);    // display.translate(-w * sinr * sinr, w * sinr * cosr);})();// ------------------------------------------------------------------------function setRadius(x, y, interval) {    var w = document.width;    var h = document.height;    var norm = map(x*y, 0, w*h, 9, 72);    var r = map(norm, 9, 72, 1, 48);    var angle = Math.abs((norm % 90) * Math.PI / 180);    return (norm < 72 && parseInt(Math.random()*r) === 0)        ? 0        : Math.sqrt(0.4) * interval * Math.sin(angle);};// ------------------------------------------------------------------------function map(val, istart, istop, ostart, ostop) {    return ostart + (ostop - ostart) * ((val - istart) / (istop - istart));};function radians(val) {    return val * (Math.PI/180);};